/**
 * 售票系统   只要在需要同步的代码加上sybchronized(Object) {}即可
 * 
 * */

package com.test04;

public class Demo02 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		// 定义三个售票窗口
		TicketWindow tWindow1 = new TicketWindow();

		// TicketWindow tWindow2 = new TicketWindow();
		//
		// TicketWindow tWindow3 = new TicketWindow();

		Thread thread1 = new Thread(tWindow1);
		Thread thread2 = new Thread(tWindow1);
		Thread thread3 = new Thread(tWindow1);

		thread1.start();
		thread2.start();
		thread3.start();
	}

}

// 售票窗口
class TicketWindow implements Runnable {
	// 一共有2000张票
	private int numbers = 2000;
	private Dog myDog = new Dog();
	@Override
	public void run() {
		// TODO Auto-generated method stub
		while (true) {
			// 出票速度是1秒出一张
			try {
				Thread.sleep(1000);
			} catch (Exception e) {
				// TODO: handle exception
			}

			// 认为这个if else要保证原子性
			synchronized (myDog) { //同步代码块 this对象本身
				// 先判断是否还有票
				if (numbers > 0) {
					// 显示售票信息 Thread.currentThread().getName() 当前线程的编号
					System.out.println(Thread.currentThread().getName() + "只在售出第 " + numbers + "张票");
					numbers--;
				} else {
					// 售票结束
					break;
				}
			}
		}
	}
}

class Dog {
	
}



